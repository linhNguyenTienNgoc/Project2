package com.cafe;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.stage.Stage;


import java.io.IOException;
import java.util.Objects;

/**
 * Main Application Class for Cafe Management System
 * 
 * @author Team 2_C2406L
 * @version 1.0.0
 */
public class CafeManagementApplication extends Application {
    
    private static final String APP_TITLE = "Cafe Management System v1.0.0";
    private static final String LOGIN_FXML = "/fxml/auth/login.fxml";

    
    private static Stage primaryStage;
    
    @Override
    public void start(Stage stage) {
        primaryStage = stage;
        try {
            showLoginScene();
        } catch (Exception e) {
            showErrorAlert("L·ªói kh·ªüi ƒë·ªông ·ª©ng d·ª•ng", 
                          "Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông ·ª©ng d·ª•ng: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Hi·ªÉn th·ªã m√†n h√¨nh ƒëƒÉng nh·∫≠p
     */
    public void showLoginScene() throws IOException {
        setLoginScene();
        primaryStage.show();
    }
    
    /**
     * Hi·ªÉn th·ªã m√†n h√¨nh ƒëƒÉng nh·∫≠p (static method) sau khi ƒëƒÉng xu·∫•t
     */
    public static void showLoginScreen() {
        try {
            setLoginScene();
        } catch (IOException e) {
            showErrorAlert("L·ªói t·∫£i giao di·ªán", 
                          "Kh√¥ng th·ªÉ t·∫£i giao di·ªán ƒëƒÉng nh·∫≠p: " + e.getMessage());
            e.printStackTrace();
        }
    }
    /**
     * H√†m private d√πng chung ƒë·ªÉ d·ª±ng Scene login
     */
    private static void setLoginScene() throws IOException {
        FXMLLoader fxmlLoader = new FXMLLoader(CafeManagementApplication.class.getResource(LOGIN_FXML));
        Scene scene = new Scene(fxmlLoader.load(), 400, 500);

        // Load CSS
        String css = Objects.requireNonNull(CafeManagementApplication.class.getResource("/css/login.css")).toExternalForm();
        scene.getStylesheets().add(css);

        primaryStage.setTitle(APP_TITLE);
        primaryStage.setScene(scene);
        primaryStage.setResizable(false);
        primaryStage.centerOnScreen();
    }
    /**
     * Hi·ªÉn th·ªã m√†n h√¨nh ch√≠nh (Dashboard)
     */
        public static void showDashboard() {
        try {
            FXMLLoader fxmlLoader = new FXMLLoader();
            fxmlLoader.setLocation(CafeManagementApplication.class.getResource("/fxml/dashboard/dashboard.fxml"));

            Scene scene = new Scene(fxmlLoader.load(), 1200, 800);
            
            // Load CSS
            String css = Objects.requireNonNull(CafeManagementApplication.class.getResource("/css/dashboard.css")).toExternalForm();
            scene.getStylesheets().add(css);

            primaryStage.setTitle(APP_TITLE + " - Dashboard");
            primaryStage.setScene(scene);
            primaryStage.setResizable(true);
            primaryStage.setMaximized(true);
            primaryStage.centerOnScreen();

        } catch (IOException e) {
            showErrorAlert("L·ªói t·∫£i giao di·ªán",
                          "Kh√¥ng th·ªÉ t·∫£i giao di·ªán ch√≠nh: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * Hi·ªÉn th·ªã m√†n h√¨nh Admin Dashboard
     */
    public static void showAdminDashboard() {
        try {
            FXMLLoader fxmlLoader = new FXMLLoader();
            fxmlLoader.setLocation(CafeManagementApplication.class.getResource("/fxml/admin/admin-dashboard.fxml"));
            
            Scene scene = new Scene(fxmlLoader.load(), 1200, 800);
            
            // Load CSS for admin dashboard
            String css = Objects.requireNonNull(CafeManagementApplication.class.getResource("/css/admin-dashboard.css")).toExternalForm();
            scene.getStylesheets().add(css);
            
            primaryStage.setTitle(APP_TITLE + " - Admin Dashboard");
            primaryStage.setScene(scene);
            primaryStage.setResizable(true);
            primaryStage.setMaximized(true);
            primaryStage.centerOnScreen();
            
        } catch (IOException e) {
            showErrorAlert("L·ªói t·∫£i giao di·ªán", 
                          "Kh√¥ng th·ªÉ t·∫£i giao di·ªán Admin: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
     */
    public static void showErrorAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
     */
    public static void showSuccessAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    /**
     * Hi·ªÉn th·ªã th√¥ng b√°o x√°c nh·∫≠n
     */
    public static boolean showConfirmAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        return alert.showAndWait().get().getButtonData().isDefaultButton();
    }
    
    /**
     * L·∫•y Primary Stage
     */
    public static Stage getPrimaryStage() {
        return primaryStage;
    }
    
    /**
     * ƒê√≥ng ·ª©ng d·ª•ng
     */
    public static void exitApplication() {
        if (showConfirmAlert("Tho√°t ·ª©ng d·ª•ng", "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tho√°t kh√¥ng?")) {
            primaryStage.close();
            System.exit(0);
        }
    }
    
    /**
     * Refresh user information in current dashboard
     * G·ªçi method n√†y khi th√¥ng tin user thay ƒë·ªïi
     */
    public static void refreshCurrentDashboardUserInfo() {
        try {
            // L·∫•y current scene v√† t√¨m controller
            if (primaryStage != null && primaryStage.getScene() != null) {
                // C√≥ th·ªÉ implement logic ƒë·ªÉ t√¨m v√† refresh dashboard controller
                System.out.println("üîÑ Refreshing dashboard user info...");
                
                // Note: Trong th·ª±c t·∫ø, c√≥ th·ªÉ c·∫ßn l∆∞u reference ƒë·∫øn current dashboard controller
                // ho·∫∑c s·ª≠ d·ª•ng event system ƒë·ªÉ notify dashboard controllers
            }
        } catch (Exception e) {
            System.err.println("‚ùå Error refreshing dashboard user info: " + e.getMessage());
        }
    }
    
    public static void main(String[] args) {
        launch();
    }
}